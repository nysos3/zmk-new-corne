#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };

        homey_left_pinky: homey_left_pinky {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEY_LEFT_PINKY";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <7 8 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 46 47 9 45 42 43 44>;
            flavor = "balanced";
            tapping-term-ms = <310>;
            quick-tap-ms = <350>;
            require-prior-idle-ms = <200>;
            hold-trigger-on-release;
        };

        homey_right_pinky: homey_right_pinky {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEY_RIGHT_PINKY";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <310>;
            quick-tap-ms = <350>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 42 43 44 45 46 47>;
        };

        homey_left_ring: homey_left_ring {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEY_LEFT_RING";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <290>;
            quick-tap-ms = <350>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 45 46 47 42 43 44>;
        };

        homey_right_ring: homey_right_ring {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEY_RIGHT_RING";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <290>;
            quick-tap-ms = <350>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 42 43 44 45 46 47>;
        };

        homey_left_middy: homey_left_middy {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEY_LEFT_MIDDY";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <260>;
            quick-tap-ms = <350>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 45 46 47 42 43 44>;
        };

        homey_right_middy: homey_right_middy {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEY_RIGHT_MIDDY";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <260>;
            quick-tap-ms = <350>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 13 14 15 16 17 18 28 29 30 31 32 33 42 43 44 2 3 4 5 45 46 47>;
        };

        homey_left_index: homey_left_index {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEY_LEFT_INDEX";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <350>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <42 43 44 45 46 47 7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41>;
        };

        homey_right_index: homey_right_index {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEY_RIGHT_INDEX";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <350>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 42 43 44 45 46 47>;
        };

        thumb_layer_access: thumb_layer_access {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LAYER_ACCESS";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <350>;
        };

        thumb_layer_access_spacebar: thumb_layer_access_spacebar {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LAYER_ACCESS_SPACEBAR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TILDE       &kp Q                      &kp W                        &kp E                      &kp R                            &kp T                                                    &mmv MOVE_UP                     &kp Y                        &kp U                                 &kp I                      &kp O                     &kp P                          &kp PLUS
&kp MINUS       &homey_left_pinky LCTRL A  &homey_left_ring LEFT_ALT S  &homey_left_middy LGUI D   &homey_left_index LSHIFT F       &kp G                                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H                        &homey_right_index LSHIFT J           &homey_right_middy LGUI K  &homey_right_ring LALT L  &homey_right_pinky LCTRL SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z                      &kp X                        &thumb_layer_access 5 C    &kp V                            &kp B                      &kp C_MUTE                    &mmv MOVE_DOWN                   &kp N                        &kp M                                 &kp COMMA                  &kp DOT                   &kp FSLH                       &kp ESC
                                                                        &thumb_layer_access 1 ESC  &thumb_layer_access 2 BACKSPACE  &thumb_layer_access 3 DEL                                                                 &thumb_layer_access 3 ENTER  &thumb_layer_access_spacebar 4 SPACE  &kp TAB
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        CURSOR {
            bindings = <
&kp LG(F)  &kp LSHIFT  &kp LG(Y)  &kp LG(Z)  &kp BACKSPACE  &kp LG(X)                     &kp UP               &kp LG(X)  &none           &none         &none           &none            &none
&kp LG(L)  &kp LCTRL   &kp LALT   &kp LGUI   &kp LSHIFT     &kp LG(C)           &kp LEFT  &none     &kp RIGHT  &kp LG(C)  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(L)
&none      &none       &none      &none      &kp F          &kp LG(V)  &none              &kp DOWN             &kp LG(V)  &kp HOME        &kp PG_UP     &kp PG_DN       &kp END          &none
                                  &trans     &none          &none                                              &none      &none           &mo 6
            >;

            label = "CURSOR";
        };

        NUMPAD {
            bindings = <
&none  &none      &none     &none     &none      &none                           &msc SCRL_UP                     &kp AT      &kp N7   &kp N8   &kp N9  &kp FSLH   &kp BACKSPACE
&none  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &none           &msc SCRL_LEFT  &trans          &msc SCRL_RIGHT  &kp POUND   &kp N4   &kp N5   &kp N6  &kp MINUS  &kp ASTRK
&none  &none      &none     &none     &none      &none  &none                    &msc SCRL_DOWN                   &kp DOLLAR  &kp N1   &kp N2   &kp N3  &kp PLUS   &kp PRCNT
                            &none     &trans     &none                                                            &kp N0      &kp DOT  &kp RET
            >;

            label = "NUM";
        };

        fn {
            display-name = "FUNC";
            bindings = <
&studio_unlock  &kp F1  &kp F2      &kp F3       &kp F4     &kp F5                                &mmv MOVE_UP                     &kp F6  &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&none           &none   &mkp LCLK   &mkp MCLK    &mkp RCLK  &none                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none   &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&none           &none   &sys_reset  &bootloader  &none      &none   &kp C_MUTE                    &mmv MOVE_DOWN                   &none   &none      &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                    &none        &none      &trans                                                                 &trans  &none      &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        symbol {
            display-name = "SYMBOL";
            bindings = <
&none  &kp EXCL  &kp AT     &kp HASH   &kp DLLR   &kp PRCNT                           &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp LPAR  &kp RPAR  &kp ASTRK  &kp BSPC
&none  &none     &mkp LCLK  &mkp MCLK  &mkp RCLK  &none               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH   &kp GRAVE
&none  &none     &none      &none      &kp LGUI   &none      &none                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE   &kp TILDE
                            &none      &none      &kp SPACE                                                            &kp RET    &trans     &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        wndw_mgmt {
            bindings = <
&kp TILDE  &none     &none             &kp LC(LA(UP))    &none              &kp LG(LC(F))                     &none         &kp N1         &kp LC(LA(U))   &kp LC(LA(I))     &none         &none         &none
&kp TAB    &kp LGUI  &kp LC(LA(LEFT))  &kp LC(LA(DOWN))  &kp LC(LA(RIGHT))  &kp LC(LA(RET))            &none  &none  &none  &kp N2         &kp LC(LA(J))   &kp LC(LA(K))     &none         &none         &none
&kp LSHFT  &none     &kp LGUI          &trans            &none              &kp LC(LA(BSPC))  &none           &none         &kp N3         &kp LA(LS(UP))  &kp LA(LS(DOWN))  &kp LG(LBKT)  &kp LG(RBKT)  &none
                                       &kp LSHFT         &none              &none                                           &kp LC(LG(U))  &kp LC(LG(F))   &kp SPACE
            >;

            label = "WINDOW";
        };

        magic {
            bindings = <
&none  &none            &none            &none            &none            &rgb_ug RGB_TOG                  &none         &bt BT_CLR    &none         &none         &none         &none         &bt BT_CLR_ALL
&none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF           &none  &none  &none  &none         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &none           &none         &none         &none         &none         &none         &none         &none
                                         &trans           &none            &out OUT_BLE                                   &out OUT_USB  &none         &trans
            >;

            label = "MAGIC";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
    };
};
